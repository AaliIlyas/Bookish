@model IList<CheckoutViewModel>;
@{
    var booksOnLoan = Model.Where(checkout => !checkout.DateReturned.HasValue);
}

<h1>History of books on loan</h1>

@foreach (var checkout in Model)
{
    var returnDate = (@checkout.DateReturned == null) ? "Unreturned" : checkout.DateReturned?.ToString("dd/MM/yyyy");
<p>@checkout.Book.Title by @checkout.Book.Author, loaned to @checkout.Member.Name, from: @checkout.DateLoaned.ToString("dd/MM/yyyy"), until: @checkout.DateDue.ToString("dd/MM/yyyy"), returned on date: @returnDate</p>

<a href="/checkout/borrow/@checkout.Id"><button>Edit</button></a>
}

<h2> Books currently on loan </h2>

@foreach (var checkout in booksOnLoan)
{
    <p>@checkout.Book.Title by @checkout.Book.Author, loaned to @checkout.Member.Name, from: @checkout.DateLoaned.ToString("dd/MM/yyyy"), until: @checkout.DateDue.ToString("dd/MM/yyyy") </p>
}

<br/>
<a href="/checkout/new">Checkout a new book</a>